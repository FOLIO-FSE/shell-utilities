#!/usr/bin/bash
auth 2>/dev/null || authn 2>/dev/null
# Script expects a delimited file with name of agreement in first column and startdate in second column

tenant=""
okapi_url=""
okapi_token=""

declare -A agreement_dict
declare -A organization_dict

infile="startdates.txt"

all_agreements=""

offset=0
recsretrieved=100

# retrieve all agreements and add to array
while [[ $recsretrieved -eq 100 ]] ;do
	apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/erm/sas?query=cql.allRecords=1&perPage=100&offset=$offset")

	recsretrieved=$(echo ${apicall} |jq '. |length')
	totalrecs=$(($offset + $recsretrieved))
	printf "%s Agreements retrieved\r" $totalrecs

	all_agreements="${all_agreements}$(echo ${apicall} |jq .[])"
	offset=$(($offset + 100))
	done

echo "$totalrecs Agreements retrieved"

# load agreements into scalar array keyed by downcased name
eval "$(echo ${all_agreements} |jq -r '. | @sh "agreement_dict[\(.name|tostring|ascii_downcase)]=\(.|tostring)"')"

echo "Normalizing Agreement keys"
# normalize keys
for key in "${!agreement_dict[@]}";do
	newkey=${key//[^a-z0-9]/}
	agreement_dict[${newkey}]=${agreement_dict["${key}"]}
done

#add script

while IFS=$'\t' read -r agreement startDate;do
	compareagreementkey=$(tr -dc "[0-9a-z]" <<< "${agreement,,}")
	agreement_record="${agreement_dict[$compareagreementkey]}"

	if [[ ${agreement_record} =~ [a-z0-9A-Z] ]];then
		agreement_uuid=$(echo ${agreement_record} |jq -r .id)
			# fix json and PUT
		agreement_record=$(echo "${agreement_record}" |jq -c ".startDate = \"${startDate}\" | .periods[0].startDate = \"${startDate}\"")
	
		curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${agreement_record}" "${okapi_url}/erm/sas/${agreement_uuid}"
	fi
	
done < ${infile}

# creates an okapi authentication token to be used
# by other scripts
#
# First generate an authentication token. You can use it for
# as many calls as you like

okapi_url=$(cat okapi.url)
tenant=$(cat tenant)

if [ -z $okapi_url ]
then
  echo -n "OKAPI URL: "
  read -r okapi_url
  echo "$okapi_url" > okapi.url
fi

if [ -z $tenant ]
then
  echo -n "Tenant ID: "
  read -r tenant
  echo "$tenant" > tenant
fi

echo -n "OKAPI username: "
read -r username

echo -n "OKAPI password: "
read -r -s pwd

IFS='' read -r -d '' okapi_login << EndOfAuth
{
  "tenant": "${tenant}",
  "username": "${username}",
  "password": "${pwd}"
}
EndOfAuth

auth=$(curl -s -w '\n' -X POST -D - \
  -H "Content-type: application/json" \
  -H "X-Okapi-Tenant: ${tenant}" \
  -d "${okapi_login}" \
  "${okapi_url}/authn/login")

okapi_token=$(echo "${auth}" | grep 'x-okapi-token: ' |sed 's/^.* //')

echo "$auth" 
echo $okapi_token |tee okapi.token



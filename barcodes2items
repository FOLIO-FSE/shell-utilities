#!/usr/bin/bash
auth 2>/dev/null || authn 2>/dev/null
tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)
SECONDS=1
OFFSET=0

infile=barcodes
outfile=items.json

dos2unix ${infile}

case ${infile} in
	barcodes)
		searchtype="barcode";;
	*)
		echo "No valid search type was found. Exiting"
		exit;;
esac

batchsize=50


querydelim="%20or%20barcode=="
endpoint="${okapi_url}/item-storage/items?query="

rm -f ${outfile}

counter=0
numrecs=$(wc -l ${infile} |cut -d " " -f1)

while mapfile -t -n ${batchsize} ids && ((${#ids[@]})); do

        if [[ $SECONDS -gt 500 ]]; then
                auth 2>/dev/null || authn 2>/dev/null
		okapi_token=$(cat okapi.token)
                SECONDS=1
		OFFSET=$(($OFFSET + 1))
		TIMER=$(($OFFSET * 500 + $SECONDS))
        fi

	counter=$(($counter + ${#ids[@]}))

	# break array into space separated string
	idstring="${ids[@]}"
	querystring="barcode==${idstring// /${querydelim}}"

	records=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${endpoint}${querystring}&limit=${batchsize}" |jq -c .items[])

	echo "${records}" >> ${outfile}



        TIME=$SECONDS;msg="$SECONDS seconds"
        if [[ $SECONDS -gt 60 ]];then TIME=$(bc <<< "scale=1;$SECONDS/60");msg="$TIME minutes";fi
        if [[ $SECONDS -gt 3600 ]];then TIME=$(bc <<< "scale=1;$SECONDS/3600");msg="$TIME hours     ";fi

	echo -en "Processing record $counter of $numrecs in $msg\r"

done < ${infile}

echo "Processed ${numrecs} barcodes. Output was written to ${outfile}"




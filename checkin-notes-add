tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)


while IFS=$'\t' read -r barcode note; do
	
	apicall=$(curl -s -w '\n' -X GET -D \
	  -H "Accept: application/json" \
	  -H "X-Okapi-Tenant: ${tenant}" \
	  -H "x-okapi-token: ${okapi_token}" \
	  "${okapi_url}/inventory/items?query=%28barcode==${barcode}%29")

	uuid=$(echo "${apicall}" |jq -r .items[0].id)

	apicall=$(curl -s -w '\n' -X GET -D \
	  -H "Accept: application/json" \
	  -H "X-Okapi-Tenant: ${tenant}" \
	  -H "x-okapi-token: ${okapi_token}" \
	  ${okapi_url}/item-storage/items/${uuid})

	checkinId=$(uuidgen)
	checkoutId=$(uuidgen)

	updated_item=$(echo ${apicall}  |jq --arg CHECKINID "${checkinId}" --arg CHECKIN "${note}" --arg CHECKOUTID "${checkoutId}" --arg CHECKOUT "${note}" ' .
		| .circulationNotes += [{"id": $CHECKINID, "noteType": "Check in", "note": $CHECKIN, "staffOnly": "true"}]
		| .circulationNotes += [{"id": $CHECKOUTID, "noteType": "Check out", "note": $CHECKOUT, "staffOnly": "true"}]
')


	apicall=$(curl --http1.1 -s -w '\n' -X PUT \
	  -H "Content-type: application/json" \
	  -H "Accept: text/plain" \
	  -H "X-Okapi-Tenant: ${tenant}" \
	  -H "x-okapi-token: ${okapi_token}" \
	  -d "${updated_item}" \
	  ${okapi_url}/item-storage/items/${uuid})
	
	echo "$uuid"
done < checkin 



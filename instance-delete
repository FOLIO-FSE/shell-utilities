# retrieves item and holdings data associated with
# an instance

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

declare -a item_ids
declare -a holdings_ids

deletefile="delete"

instance_uuid=${1//[^0-9a-z\-]/}

if [[ ${instance_uuid} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then
        echo ${instance_uuid} > ${deletefile}
fi

if [[ ! -f ${deletefile} ]]; then echo "This script cannot find input file ${deletefile}";exit;fi

counter=0

numrecs=$(wc -l ${deletefile} |cut -d " " -f1)

while read -r deletethis; do
	counter=$(($counter + 1))
	instance_uuid=${deletethis//[^0-9a-z\-]/}

	apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/item-storage/items?limit=10000&query=instance.id==${instance_uuid}")
	
	item_ids=($(echo $apicall | jq -r .items[].id))
	item_arr_size=${#item_ids[@]}
	
	if [[ $item_arr_size == 0 ]]
	then
		echo "No items were detected"
	else
		echo "$item_arr_size items were detected: Deleting items"
	
		for item in ${item_ids[*]};do
	  		echo $item
			curl -s -w '\n' -X DELETE -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/item-storage/items/${item}"
		done
	fi
	
	apicall=$(curl -s -w '\n' -X GET -D \
	  -H "Accept: application/json" \
	  -H "X-Okapi-Tenant: ${tenant}" \
	  -H "x-okapi-token: ${okapi_token}" \
	  "${okapi_url}/holdings-storage/holdings?limit=10000&query=instanceId==${instance_uuid}")
	
	holdings_ids=($(echo $apicall | jq -r .holdingsRecords[].id))
	holdings_arr_size=${#holdings_ids[@]}
	
	if [[ $holdings_arr_size == 0 ]]
	then
		echo "No holdings were detected"
	else
		echo "$holdings_arr_size items were detected. Deleting holdings:"
	
		for holding in ${holdings_ids[*]};do
	  		echo $holding
			curl -s -w '\n' -X DELETE -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/holdings-storage/holdings/${holding}"
		done
	fi
	
	srs_uuid=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/source-storage/records/${instance_uuid}/formatted?idType=INSTANCE" |jq -r '.matchedId')
	
	curl -s -w '\n' -X DELETE -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/source-storage/records/${srs_uuid}"

        connectedtitle_ids=($(apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${endpoint}/preceding-succeeding-titles?query=(precedingInstanceId==${instance_uuid}%20or%20succeedingInstanceId==${instance_uuid}") |jq -r .precedingSucceedingTitles[].id))

        for connectedtitle in ${connectedtitle_ids[@]};do
                curl -s -w '\n' -X DELETE -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/preceding-succeeding-titles/${connectedtitle}"
        done

	curl -s -w '\n' -X DELETE -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/instance-storage/instances/${instance_uuid}"
	echo "Processed record $counter of $numrecs"
done < ${deletefile}


# retrieves item and holdings data associated with
# an instance

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

deletefile="delete"
batchsize=50
querydelim="%20or%20id=="
sed -i 's/[^a-f0-9\-]//g' ${deletefile}

rm -rf delete_instances delete_holdings delete_items delete_*.log

instance_uuid=${1//[^0-9a-z\-]/}
cp ${deletefile} delete_instances

if [[ ${instance_uuid} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then
        echo ${instance_uuid} > ${deletefile}
fi

if [[ ! -f ${deletefile} ]]; then echo "This script cannot find input file ${deletefile}";exit;fi

counter=0
SECONDS=1

numrecs=$(wc -l ${deletefile} |cut -d " " -f1)

echo "Retrieving records"

while mapfile -t -n ${batchsize} ids && ((${#ids[@]})); do
	counter=$(($counter + ${#ids[@]}))
	idstring="${ids[@]}"
	querystring="query=id=${idstring// /${querydelim}}"

	{
	for id in "${ids[@]}";do
		curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${endpoint}/preceding-succeeding-titles?query=(precedingInstanceId==${id}%20or%20succeedingInstanceId==${id}" |jq -r '.precedingSucceedingTitles?' |grep "^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*" >> delete_precedingsucceeding 2>/dev/null

		curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/source-storage/records/${id}/formatted?idType=INSTANCE" |jq -r '.id?' |grep "^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*" >> delete_srs 2>/dev/null
	done
	} &

	records=$(curl -s -w '\n' -X GET -H "Accept: text/plain" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/inventory-view/instances?${querystring}&limit=${batchsize}" |jq -c '.instances[]')

	echo "${records}" |jq -r '.holdingsRecords?[]?.id' >> delete_holdings
	echo "${records}" |jq -r '.items?[]?.id' >> delete_items

	wait

        TIME=$SECONDS;msg="$SECONDS seconds"

        if [[ $SECONDS -gt 60 ]];then TIME=$(($SECONDS/60));msg="$TIME minutes";fi
        if [[ $SECONDS -gt 3600 ]];then TIME=$(($SECONDS/3600));msg="$TIME hours";fi

        echo -en "Retreiving record $counter of $numrecs in $msg in $(($counter/$SECONDS)) recs/sec          \r"

done < ${deletefile}
echo

echo "Deleting items"
cp delete_items delete
records-delete items
rm -f delete

echo "Deleting holdings"
cp delete_holdings delete
records-delete holdings
rm -f delete

echo "Deleting SRS"
cp delete_srs delete
records-delete srs
rm -f delete

echo "Deleting connected titles"
cp delete_precedingsucceeding delete
records-delete precedingsucceeding

echo "Deleting instances"
cp delete_instances delete
records-delete instances

echo "All records have been deleted"

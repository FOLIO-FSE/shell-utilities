auth 2>/dev/null || authn 2>/dev/null
# retrieves item and holdings data associated with
# an instance

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

declare -a item_ids
declare -a holdings_ids

getfile="uuids"
itemfile="items.json"
holdingsfile="holdings.json"
instancefile="instances.json"
srsfile="srs.json"

rm -f ${itemfile} ${holdingsfile} ${instancefile} ${srsfile}

instance_uuid=${1//[^0-9a-z\-]/}

if [[ ${instance_uuid} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then
        echo ${instance_uuid} > ${getfile}
fi

if [[ ! -f ${getfile} ]]; then echo "This script cannot find input file ${getfile}";exit;fi

counter=0

numrecs=$(wc -l ${getfile} |cut -d " " -f1)

while read -r getthis; do
	counter=$(($counter + 1))
	instance_uuid=${getthis//[^0-9a-z\-]/}

	curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/item-storage/items?limit=10000&query=instance.id==${instance_uuid}" | jq -rc '.items[]' >> ${itemfile}
	
	curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/holdings-storage/holdings?limit=10000&query=instanceId==${instance_uuid}" | jq -rc '.holdingsRecords[]' >> ${holdingsfile}
	
	curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/source-storage/records/${instance_uuid}/formatted?idType=INSTANCE" |jq -rc '.' >> ${srsfile}

	curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/instance-storage/instances/${instance_uuid}" |jq -rc '.' >> ${instancefile}
	
	echo -en "Processed record $counter of $numrecs\r"
done < ${getfile}


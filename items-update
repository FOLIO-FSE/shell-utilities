tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

infile=infile
outfile=item_update.log

rm -f ${outfile}

counter=0
numrecs=$(wc -l ${infile} |cut -d " " -f1)

item_update() {
	local search=${1}
	local fileno=${2}

	local barcode=0
	local endpoint
	local apicall
	local uuid
	local item
	local updated_item

	if [[ ${search} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then
        	endpoint="${okapi_url}/item-storage/items/${search}"
	else
        	endpoint="${okapi_url}/item-storage/items?query=barcode==${search}"
		barcode=1
	fi

	apicall=$(curl -s -w '\n' -X GET -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${endpoint}")

	if [[ "${barcode}" -eq "1" ]];then
        	apicall=$(echo $apicall |jq '.items[0]')
	fi	

	barcode=$(echo ${apicall} |jq -r '.barcode')
	barcode=${barcode// /}
	uuid=$(echo ${apicall} |jq -r '.id')

#		(.status.name = "Available")
#		(.discoverySuppress = true)
#		(.permanentLocationId = "8c3d59fb-c926-4cc3-aeae-6e3f3e4ed087")


	updated_item=$(echo ${apicall}  |jq  '
		(.permanentLocationId = "8c3d59fb-c926-4cc3-aeae-6e3f3e4ed087")
')

	apicall=$(curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "Accept: text/plain" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${updated_item}" ${okapi_url}/item-storage/items/${uuid})

	echo "${apicall}" |jq -c |grep -i [a-z] > "tmp_items.${fileno}"

}

while mapfile -t -n 5 ids && ((${#ids[@]})); do
	for id in ${ids[@]};do
		seq=0
		item_update ${id} ${seq} &
		counter=$(($counter + 1))
		seq=$(($seq + 1))
		printf "Processing %s -- record %s of %s\r" $counter $numrecs

	done
	wait

	cat tmp_items.* >> ${outfile}
	rm tmp_items.*

done < ${infile}

echo "Processed ${numrecs} records. Output was written to ${outfile}"




auth 2>/dev/null || authn 2>/dev/null

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

logfile="jobprofiles.log"

rm -f ${logfile}

declare -A import_mappingprofile
declare -A import_matchprofile
declare -A import_actionprofile

declare -A export_mappingprofile

#################### define import profiles. Mapping, match, and action job profiles. Job profile is autogenerated

	############## import profile to update items

	import_mappingprofile[1]='{"profile":{"name":"ZKB Items, update on barcode","incomingRecordType":"MARC_BIBLIOGRAPHIC","existingRecordType":"ITEM","description":"","mappingDetails":{"name":"item","recordType":"ITEM","mappingFields":[{"name":"status.name","enabled":true,"path":"item.status.name","subfields":[],"value":"\"Available\""}]}},"addedRelations":[],"deletedRelations":[]}'

	import_matchprofile[1]='{"profile":{"name":"ZKB Items, match on 001 barcode","description":"","incomingRecordType":"MARC_BIBLIOGRAPHIC","matchDetails":[{"incomingRecordType":"MARC_BIBLIOGRAPHIC","incomingMatchExpression":{"fields":[{"label":"field","value":"001"},{"label":"indicator1","value":""},{"label":"indicator2","value":""},{"label":"recordSubfield","value":""}],"staticValueDetails":null,"dataValueType":"VALUE_FROM_RECORD"},"existingRecordType":"ITEM","existingMatchExpression":{"fields":[{"label":"field","value":"item.barcode"}],"dataValueType":"VALUE_FROM_RECORD"},"matchCriterion":"EXACTLY_MATCHES"}],"existingRecordType":"ITEM"},"addedRelations":[],"deletedRelations":[]}'

	import_actionprofile[1]='{"profile":{"description":"","name":"ZKB Items update status to Available","action":"UPDATE","folioRecord":"ITEM"},"addedRelations":[],"deletedRelations":[]}'

	############## export profile to send bib ids, holdings ids, item ids

	export_mappingprofile[1]='{"transformations":[{"fieldId":"holdings.id","path":"$.holdings[*].id","recordType":"HOLDINGS","transformation":"901  $a","enabled":true},{"fieldId":"instance.id","path":"$.instance.id","recordType":"INSTANCE","transformation":"001  ","enabled":true},{"fieldId":"item.barcode","path":"$.holdings[*].items[*].barcode","recordType":"ITEM","transformation":"902  $b","enabled":true},{"fieldId":"item.hrid","path":"$.holdings[*].items[*].hrid","recordType":"ITEM","transformation":"902  $a","enabled":true},{"fieldId":"item.id","path":"$.holdings[*].items[*].id","recordType":"ITEM","transformation":"901  $b","enabled":true}],"recordTypes":["INSTANCE","HOLDINGS","ITEM"],"outputFormat":"MARC","name":"ZKB Instance, Holdings, Items"}'


#################### define export profiles. Mapping and job profiles needed
 
############## load import profile 

function load_import_profile {

	##### mapping profile

	import_mappingprofile[$which_profile]=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${import_mappingprofile[$which_profile]}" "${okapi_url}/data-import-profiles/mappingProfiles" |jq -c .)
	echo "${import_mappingprofile[$which_profile]}" | tee -a ${logfile}
	map_id=$(jq -r .id <<< "${import_mappingprofile[$which_profile]}")
	profile_name=$(jq -r '.profile.name' <<< "${import_mappingprofile[$which_profile]}")

	##### match profile

	import_matchprofile[$which_profile]=$(curl --http1.1 -s -w '\n' -X POST -H 'Content-type: application/json' -H 'Accept: application/json' -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${import_matchprofile[$which_profile]}" "${okapi_url}/data-import-profiles/matchProfiles" |jq -c .)
	echo "${import_matchprofile[$which_profile]}" |tee -a ${logfile}
	match_id=$(jq -r .id <<< "${import_matchprofile[$which_profile]}")

	##### action profile

	import_actionprofile[$which_profile]=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${import_actionprofile[$which_profile]}" "${okapi_url}/data-import-profiles/actionProfiles" | jq -c .)
	echo "${import_actionprofile[$which_profile]}" |tee -a ${logfile}
	action_id=$(jq -r .id <<< "${import_actionprofile[$which_profile]}")

	import_actionprofile[$which_profile]=$(echo "${import_actionprofile[$which_profile]}" |jq -c --arg ACTION_ID ${action_id} --arg MAP_ID ${map_id} '.addedRelations = [{ "masterProfileId": $ACTION_ID, "masterProfileType": "ACTION_PROFILE", "detailProfileId": $MAP_ID, "detailProfileType": "MAPPING_PROFILE"}]')

	curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${import_actionprofile[$which_profile]}" "${okapi_url}/data-import-profiles/actionProfiles/${action_id}"| jq -c . | tee -a ${logfile}

	##### job profile

	import_jobprofile="{\"profile\":{\"name\":\"${profile_name}\",\"description\":\"\",\"dataType\":\"MARC\"},\"addedRelations\":[],\"deletedRelations\":[]}"


	import_jobprofile=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${import_jobprofile}" "${okapi_url}/data-import-profiles/jobProfiles" |jq -c .)
	job_id=$(jq -r .id <<< "${import_jobprofile}")
	echo "${apicall}" |tee -a ${logfile}

	import_jobprofile=$(echo "${import_jobprofile}" |jq -c --arg JOB_ID ${job_id} --arg MATCH_ID ${match_id} --arg ACTION_ID ${action_id} '.addedRelations = [  { "masterProfileId": $JOB_ID, "masterWrapperId": null, "masterProfileType": "JOB_PROFILE", "detailProfileId": $MATCH_ID, "detailWrapperId": null, "detailProfileType": "MATCH_PROFILE", "order": 0 }, { "masterProfileId": $MATCH_ID, "masterWrapperId": null, "masterProfileType": "MATCH_PROFILE", "detailProfileId": $ACTION_ID, "detailWrapperId": null, "detailProfileType": "ACTION_PROFILE", "order": 0, "reactTo": "MATCH" }]')
	curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${import_jobprofile}" "${okapi_url}/data-import-profiles/jobProfiles/${job_id}" |jq -c . |tee -a ${logfile}

}

function load_export_profile {
	export_mappingprofile[$which_profile]="$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${export_mappingprofile[$which_profile]}" "${okapi_url}/data-export/mapping-profiles" | jq -c . |tee -a ${logfile})"
	map_id=$(jq -r .id <<< "${export_mappingprofile[$which_profile]}")
	profile_name=$(jq -r .name <<< "${export_mappingprofile[$which_profile]}")

	jobprofile="{\"name\":\"${profile_name}\", \"mappingProfileId\": \"${map_id}\"}"
	sleep 1
	curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${jobprofile}" "${okapi_url}/data-export/job-profiles" | jq -c . |tee -a ${logfile}

}

##################### load import profiles

numprofiles=${#import_mappingprofile[@]}

for (( which_profile=1; which_profile<=${numprofiles}; which_profile++));do
#	load_import_profile
echo
done

##################### load export profiles


numprofiles=${#export_mappingprofile[@]}

for (( which_profile=1; which_profile<=${numprofiles}; which_profile++));do
	load_export_profile
done
################ export profile to export ids



#!/usr/bin/bash

if [[ -z ${3} ]];then
	echo "Maps values in a two column tab delimited file into a JSON document based on key matchpointy"
	echo "Use the not keyword to select records that do not match"
	echo
	echo "JSON key must be specified in jq syntax"
	echo
	echo "Usage: jqmap [jsonfile] [mapfile] [jsonkey]"
	echo
	echo "jqinsert items.json item_status itemDamagedStatusId"
	echo
	exit
else
	json_file="${1}"
	map_file="${2}"
	matchkey="${3}"
	newkey="${4}"
	fileroot=$(echo "${json_file}" | sed 's/\.....\?$//')
	outfile="${fileroot}_remapped.json"
fi

jq -rRn '
	 reduce inputs as $line ({};
		($line | split("\t") | .[0]) as $key |
		($line | split("\t") | .[1]) as $value |
		. + { ($key): $value }
	)
' ${map_file} > tmp_map

pv  ${json_file} | jq -c --argfile key_value tmp_map --arg MATCHKEY "${matchkey}" --arg NEWKEY "${newkey}" '
	(if .[$MATCHKEY] != null then ($key_value[.[$MATCHKEY]] // null) else null end) as $value
		| if $value != null and ($value | test("^[\\[{]")) then
			(. + { ($NEWKEY): ($value | fromjson) })
    else if $value != null then
			(. + { ($NEWKEY): $value }) 
		else
      .
    end
		end
' > ${outfile}

rm tmp_map
echo "A remapped file has been sent to ${outfile}"
echo

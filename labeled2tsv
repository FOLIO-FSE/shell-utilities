filelist=("$@")
infile="${filelist[0]}"

add_prefixes() {
	echo "Adding prefixes to nested fields"

	awk -v PREFIX_ON="${prefix_on}" -v PREFIX_OFF="${prefix_off}" '{
		printrecord = "yes"	

		if ($0 ~ PREFIX_ON) { PREFIX = $1; sub("_BEGIN", "", PREFIX);printrecord = "no" }
		if ($0 ~ PREFIX_OFF) { PREFIX = ""; printrecord = "no" }
		if (printrecord == "yes") { print PREFIX""$0 }

	}' tmp_cleanfile > tmp_prefixed

	cp tmp_prefixed tmp_cleanfile 
}

clean_file() {
	echo "Normalizing ${infile} (${filetype} file detected)"
	sed "s/${field_detect}/\t/" "${infile}" > tmp_cleanfile	

	if [[ $prefix_on != "" ]];then add_prefixes;fi

	echo "Identifying fields"
	grep -P "\t." tmp_cleanfile |cut -f1 |sort -u > tmp_fields

}

labeled2tsv() {
	# generate header
	cat tmp_fields |tr '\n' '\t' > "${outfile}"

	awk -v OUTFILE="${outfile}" -v SOURCERS="${RS}" '{
		if (NR == FNR) { 
			RS = "\n"
			labels[$1] = NR 
			data[NR] = ""
			NUMFIELDS++	
		} else {
			RS = SOURCERS; FS="\n"
			for (entry in data) { data[entry] = "" } # clear out data array
print $1
			for (i=1; i<=NUMFIELDS; i++) {
				split($i, label_field)

				label = label_field[0]
				field = label_field[1]

				if (labels[label] != "") {
					if (data[i] == "") {
						data[i] = field
					} else {
						data[i] = data[i]";"field
					}
				}
			}
			for (i=1; i<=NUMFIELDS; i++) { printf("%s%s",data[i],i==NF?RS:OFS) >> OUTFILE }
	
			if ((NR % 1000) == 0) { printf ("%d records processed\r", NR) }
		}

	}
	END {
		print NR" records were processed and sent to "OUTFILE
	}' tmp_fields junk  tmp_cleanfile
}

prefix_on=""
prefix_off=""

if [[ "${infile}" =~ \....$ ]];then
	outfile=$(echo "${infile}" |sed 's/\(.*\)\(\....$\)/\1_fixed.tsv/')
else
	outfile="${infile}_fixed.tsv"
fi

fgrep -q '*** DOCUMENT BOUNDARY ***' "${infile}" && filetype="sirsi"

case $filetype in
	sirsi)
		RS="... DOCUMENT BOUNDARY ..."
		field_detect=" \\+|a"
		prefix_on="_BEGIN."
		prefix_off="_END."
		;;

esac

clean_file
labeled2tsv

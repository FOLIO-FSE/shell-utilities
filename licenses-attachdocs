# Script expects a delimited file with name of license in first column and location of data file to upload in second colum

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

declare -A license_dict

all_licenses=""

offset=0
recsretrieved=100

# retrieve all records
while [[ $recsretrieved -eq 100 ]] ;do
	apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/licenses/licenses?sort=name%3Bdesc&perPage=100&offset=$offset")

	recsretrieved=$(echo ${apicall} |jq '. |length')
	totalrecs=$(($offset + $recsretrieved))
	printf "%s records retrieved\r" $totalrecs

	all_licenses="${all_licenses}$(echo ${apicall} |jq .[])"
	offset=$(($offset + 100))
	done

echo "$totalrecs records retrieved"

# load licenses into scalar array keyed by downcased name
eval "$(echo ${all_licenses} |jq -r '. | @sh "license_dict[\(.name|tostring|ascii_downcase)]=\(.|tostring)"')"

echo "Normalizing keys"
# normalize keys
for key in "${!license_dict[@]}";do
	newkey=$(tr -dc [a-z0-9] <<< "${key}")
	license_dict[${newkey}]=${license_dict["${key}"]}
done

# attach docs

while IFS=$'\t' read -r license file;do
	# post file and get id
	apicall=$(curl --http1.1 -s -w '\n' -X POST -H  "Content-Type:multipart/form-data" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -F upload=@${file} "${okapi_url}/licenses/files")

	file_uuid=$(echo ${apicall} |jq -r .id)
	comparekey=$(tr -dc "[0-9a-z]" <<< "${license,,}")

	# fix json and PUT
	record=$(echo "${license_dict[$comparekey]}" | jq ".docs += [{ \"_delete\": false,\"fileUpload\": \"${file_uuid}\", \"name\": \"test\" }]")
	record_uuid=$(echo ${record} |jq -r .id)

	curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${record}" "${okapi_url}/licenses/licenses/${record_uuid}"
	
done < docs


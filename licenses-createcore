auth 2>/dev/null || authn 2>/dev/null
tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

infile="licenses.txt"
dos2unix ${infile}


create_license() {

IFS='' read -r -d '' license << EndOfLicense
{
  "name": "${name}",
  "type": "local",
  "status": "active",
  "customProperties": {},
  "openEnded": false,
  "id": "${uuid}"
}
EndOfLicense

echo "${license}"

}


while IFS=$'\n' read -r line;do 
	line=$(echo "${line}" |tr "\t" "^" |tr -d '"')
	IFS='^' read -r name description startdate enddate <<< ${line}
	description=$(echo ${description} |jq -Rs )
	keyname=$(tr -dc [a-z0-9] <<< ${name,,})

	# license uuid -- needs to be global
	namespace="8405ae4d-b315-42e1-918a-d1919900cf3f"
	uuid=$(uuid -v 5  ${namespace} ${okapi_url}:licenses:${keyname})

	license=$(create_license)

	if [[ ${startdate} =~ ^[12][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$ ]];then
		license=$(echo "${license}" | jq ".startDate = \"${startdate}\"")
		if [[ ! ${enddate} =~ ^[12][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$ ]];then 
			license=$(echo "${license}" | jq ".openEnded = true")
		fi
			
	fi
	if [[ ${enddate} =~ ^[12][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$ ]];then
		license=$(echo "${license}" | jq ".endDate = \"${enddate}\"")
			
	fi

	if [[ ${description} != '""' ]];then
		license=$(echo "${license}" | jq ".description = ${description}")
	fi
	

	apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${license}" "${okapi_url}/licenses/licenses")

	echo "${apicall}"
done < ${infile}


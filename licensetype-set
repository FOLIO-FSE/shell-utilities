#!/usr/bin/bash
auth 2>/dev/null || authn 2>/dev/null
# Expects data in delimited file named licenses
#
# Terms are mapped by their labels, list items by term uuid and normalized value
#
# infile should have same name as term

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

field_name="License.Type"
infile=${field_name}

declare -A dict_picklist_uuid
declare -A dict_picklist_values
declare -A dict_license_uuid
declare -A dict_licenses

declare -a picklist_uuids
declare -a picklist_desc
declare -a picklist_labels
declare -a picklist_values
declare -a license_names
declare -a license_uuids
declare -a all_licenses

picklists=$(curl -s -w '\n' -X GET \
  -H "Accept: application/json" \
  -H "X-Okapi-Tenant: ${tenant}" \
  -H "x-okapi-token: ${okapi_token}" \
  "${okapi_url}/licenses/refdata?query=cql.allRecords=1&perPage=100000")


picklist_uuids=($(echo ${picklists} |jq -r '.[].id' |tr -cd "[0-9a-zA-Z\-\n]"))
picklist_desc=($(echo ${picklists} |jq -r '.[].desc' |tr -cd "[0-9a-zA-Z\-.\n]"))
picklist_values=($(echo ${picklists} |jq -r '.[] | [ .values[].value ] |join("^")' ))
picklist_labels=($(echo ${picklists} |jq -r '.[] |  [ .values[].label ] |join("^")' |tr -d " " |tr [A-Z] [a-z] ))

# a bunch of arrays need to be glued together using index position

# declare scalar arrays pointing from term type to uuid
picklist_length=${#picklist_desc[@]}
for ((pickcounter=0; pickcounter<=${picklist_length};pickcounter++));do
	# select the picklist for the column
	if [[ ${picklist_desc[$pickcounter]}  == "${field_name}" ]];then
		picklist_uuid="${picklist_uuids[$pickcounter]}"
		
		IFS='^' read -r -a value_arr <<< "${picklist_values[$pickcounter]}"
		IFS='^' read -r -a label_arr <<< "${picklist_labels[$pickcounter]}"

		for ((entry=0; entry<${#label_arr[@]}; entry++));do
			label=$(echo "${label_arr[$entry],,}" |tr -d " ")
			value=${value_arr[$entry]}
			dict_picklist_values["${label}"]="${value}"
		done
	fi
done

termcounter=1

while IFS=$'\t' read license_name term_value public_note;do
	echo -e "Processng term ${termcounter}"

	license=$(curl  --data-urlencode "term=${license_name}" --data-urlencode "match=name" -G -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/licenses/licenses" |jq -r '.[0]')

	public_note=$(jq . -Rs <<< ${public_note})

	license_id=$(echo ${license} |jq -r '.id')

	dict_licenses[${license_id}]="${license}"

	
	term_value=$(echo ${term_value,,} |tr -d "[ _]")

	term_value=${dict_picklist_values["${term_value}"]}


	if [[ ! -z ${term_value} ]];then

		license=$(echo ${license} |jq ".type = \"${term_value}\"")

		apicall=$(curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${license}" "${okapi_url}/licenses/licenses/${license_id}")
		echo $apicall 
	fi

termcounter=$((${termcounter} + 1))

done < ${infile}

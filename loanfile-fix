#!/usr/bin/awk -f
#

# Be sure to add a line for each date to be fixed and tweak to match format
#
# expected headers are item_barcode, out_date, due_date, renewal_count, patron_barcode, next_item_status

function fixdate(value)
{
	gsub(/ .*/, "", value)
	
	if (value ~ /^[0-9]*-[0-9]*-[0-9]*$/) {
		split(value, datearr, datesep)
		retval = sprintf("%04d-%02d-%02d", datearr[3], datearr[2], datearr[1])
	} else {retval = ""}

	return retval

}

BEGIN{FS=OFS="\t";counter = 0;badrecs = 0;datesep = "-" }

{
	item_barcode=$2
	item_identifier=""
	patron_barcode=$1
	patron_identifier=""
	out_date=$5
	due_date=$3
	renewal_count=$6
	next_item_status="Checked out"

	gsub("\"", "", item_barcode)
	gsub("\"", "", item_identifier)
	gsub("\"", "", patron_barcode)
	gsub("\"", "", patron_identifier)
	gsub("\"", "", out_date)
	gsub("/", "-", out_date)
	gsub("\"", "", due_date)
	gsub("/", "-", due_date)
	gsub("\"", "", renewal_count)

	if (item_barcode == "") {item_barcode = item_identifier}
	if (patron_barcode == "") {patron_barcode = patron_identifier}

	gsub(/"/, "", $0)
	if (NR==1) {print "item_barcode\tpatron_barcode\tout_date\tdue_date\trenewal_count\tnext_item_status" > "open_loans.tsv"} else {

	counter++
	out_date = fixdate(out_date) # 
	due_date = fixdate(due_date) # 
	
	print item_barcode" "patron_barcode, out_date, due_date, renewal_count, next_item_status >> "open_loans.tsv" 

	if (counter % 1000 == 0) {
		printf "%s records\r", counter
	}


}

}
END{ print counter" records were processed" }

# Creates location based on contents of tab delimited file
#
# Code is expected in column 1 of a file named "locations"
# Display name is set in column 2

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

servicePointId="0e38c704-6514-46d9-9728-803289cb63d3"
institutionId="d0a21f4a-b891-4646-a763-3b1cebbcca87"
campusId="59cbdaa9-9dca-479c-a371-a0183990a820"
libraryId="be1deee1-8bf9-4b65-b7ee-4591b6f863f6"

while IFS=$'\t' read -r code discovery name

if [[ -z ${discovery} ]];then discovery="${code}"; fi 
if [[ -z ${name} ]];then name="${discovery}"; fi 

do

IFS='' read -r -d '' location << EndOfLocation

{
"code": "${code}",
"discoveryDisplayName": "${discovery}",
"name": "${name}",
"isActive": true,
"institutionId": "${institutionId}",
"campusId": "${campusId}",
"libraryId": "${libraryId}",
"primaryServicePoint": "${servicePointId}",
"servicePointIds": [
"${servicePointId}"
],
"servicePoints": []
}
EndOfLocation

apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${location}" "${okapi_url}/locations")

echo -e "${apicall}" |jq '.'
done < locations



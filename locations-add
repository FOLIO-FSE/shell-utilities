# Creates location based on contents of tab delimited file
#
# Code is expected in column 1 of a file named "locations"
# Display name is set in column 2

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

servicePointId="c2c72c79-a262-41e1-a1b6-cf1e5509898d"
institutionId="92225d21-cab9-436d-9a4f-99444b8c506b"
campusId="34ba45c6-4b95-4560-9d04-2b9cb0093ca1"
libraryId="b933d672-1cf4-4b84-ae79-e37ca0d38247"

while IFS=$'\t' read -r code discovery 
do

IFS='' read -r -d '' location << EndOfLocation

{
"code": "${code}",
"discoveryDisplayName": "${discovery}",
"name": "${discovery}",
"isActive": true,
"institutionId": "${institutionId}",
"campusId": "${campusId}",
"libraryId": "${libraryId}",
"primaryServicePoint": "${servicePointId}",
"servicePointIds": [
"${servicePointId}"
],
"servicePoints": []
}
EndOfLocation

apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${location}" "${okapi_url}/locations")

echo -e "${apicall}" |jq '.'
done < locations



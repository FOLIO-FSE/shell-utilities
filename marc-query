auth 2>/dev/null || authn 2>/dev/null

tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

if [[ -z $3 ]];then
	echo "search syntax: marc-query [field] [subfield] [operator] [value] OR marc-query [field] [operator] [value] leader (to specify leader search)"
	echo
	echo "marc-query 260 a ^= 'Paris'"
	echo "marc-query p_06 = 'a' leader (leader search)"
	echo "marc-query 005.00_04 = '2021' (startpos_endpos)"
	echo "marc-query 008.00_01 = 's' (startpos_endpos)"
	echo "marc-query 650 ind2 = 7"
	echo "marc-query 740 is present"
	echo "marc-query 740 a is absent"
	echo "You can add two boolean conditions following the pattern above"
	echo "Additional ones require script modification"
	exit
fi


field="$1"

if [[ ${4} == "leader" ]];then
	searchtype="leadersearch"
	operator="${2}"
	value="'"${3}"'"	
else
	searchtype="fieldsearch"
	subfield="${2}"
	operator="${3}"
	value="'"${4}"'"

	search1="${field}.${subfield} ${operator} ${value}"
	search2=""
	search3=""

	bool="${5}"
	field2="${6}"
	subfield2="${7}"
	operator2="${8}"
	value2="'"${9}"'"

	if [[ $value2 =~ [A-Za-z0-9] ]];then
		search2=" ${bool} ${field2}.${subfield2} ${operator2} ${value2}"
	fi

	bool2="${10}"
	field3="${11}"
	subfield3="${12}"
	operator3="${13}"
	value3="'"${14}"'"

	if [[ $value3 =~ [A-Za-z0-9] ]];then
		search3=" ${bool2} ${field3}.${subfield3} ${operator3} ${value3}"
	fi
fi

if [ "$#" -eq 3 ]; then
	searchtype="fieldsearch"
	subfield="value"
	operator="${2}"
	value="'"${3}"'"
	search1="${field}.${subfield} ${operator} ${value}"
fi

tag=${field:0:3}

case ${tag} in
	"005")
		search1="${field} ${operator} ${value}"	;;
	"008")
		search1="${field} ${operator} ${value}"	;;
esac

IFS='' read -r -d '' fieldsearch << EndOfJSON
{
	"fieldsSearchExpression": "${search1}${search2}${search3}"
}
EndOfJSON


IFS='' read -r -d '' leadersearch << EndOfJSON
{
	"leaderSearchExpression": "${field} ${operator} ${value}"
}
EndOfJSON

data="${!searchtype}"


apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${data}" "${okapi_url}/source-storage/stream/marc-record-identifiers")
echo ${data}
echo ${apicall}
echo -e "${apicall}" |jq -r .records[] > ids
echo "$(jq -r '.records|length' <<< ${apicall}) records have been exported to \"ids\""


# examples
# left anchred search: "260.a ^= 'Paris'"
# search by position: "005.00_04 = '2021'" (startpos_endpos)
# leader search: specify the position you wish to search. For example to search for 'a' in position 06 and 'm' in position 07, "p_06 = 'a' and p_07 = 'm'"



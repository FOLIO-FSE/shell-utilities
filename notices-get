tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)


offset=0
search_for=$1

if [[ ${search_for} != "" ]];then
        if [[ ${search_for} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then
                curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/scheduled-notice-storage/scheduled-notices?query=userId=${search_for}"
                exit
        else
                id=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/users?query=barcode==${search_for}"|jq -r '.users[0].id')
                curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/scheduled-notice-storage/scheduled-notices?query=recipientUserId=${id}"
                exit
        fi
fi

num_notices=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/scheduled-notice-storage/scheduled-notices?limit=0" |jq -r .totalRecords)

for (( offset=0; offset<=$num_notices; offset = offset + 1000 ));do
	all_notices=${all_notices}$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/scheduled-notice-storage/scheduled-notices?query=cql.allRecords=1&limit=1000&offset=$offset" |jq .scheduledNotices[])
	if [[ $offset -ne 0 ]];then printf "%s records retrieved of %s\r" $offset, $num_notices;fi
	done

echo "${all_notices}" > notices 
echo 'Notices have been exported to "notices"'

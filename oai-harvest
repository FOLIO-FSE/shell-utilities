okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)
edge_key=$(cat edge.key)
tenant=$(cat tenant)
edge_url=$(cat okapi.url |sed 's/okapi-/edge-/')
oai_server="${edge_url}/oai/$(cat edge.key)?verb=ListRecords"

#### look for single record query and exit
search=$(echo ${1} |tr "." "-" |tr -dc [^a-z0-9\-])

if [[ ${1} =~ ^[12][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$ ]];then
	from=$(date -u -d "${1}" +"%Y-%m-%dT%H:%M:%SZ")
else
	from=$(date -u -d '1 hour ago' +"%Y-%m-%dT%H:%M:%SZ")
fi

if [[ ${search} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then
        instance_uuid=${search}
elif [[ ${search} =~ ^in[0-9a]*$ ]];then
        instance_uuid=$(curl -s -w '\n' -X GET -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/instance-storage/instances?query=hrid==${search}" |jq -r '.instances[].id')
fi

if [[ ${instance_uuid} =~ ^[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*-[0-9a-f]*$ ]];then

        oai_prefix=$(curl -s -X GET "${edge_url}/oai/${edge_key}?verb=Identify" | sed 's/.*<oai-identifier:repositoryIdentifier>\([^<]*\).*/\1/')

        apicall=$(curl -s -X GET "${edge_url}/oai/${edge_key}?verb=GetRecord&identifier=oai:${oai_prefix}:${tenant}/${instance_uuid}&metadataPrefix=marc21_withholdings")

        echo "${apicall}" |xmlstarlet fo
        echo "${edge_url}/oai/${edge_key}?verb=GetRecord&identifier=oai:${oai_prefix}:${tenant}/${instance_uuid}&metadataPrefix=marc21_withholdings"
        exit
fi

from='&from='${from}

echo "${oai_server}&metadataPrefix=marc21_withholdings${from}"

resumption_token=''
counter=0
SECONDS=0

if [[ ${resumption_token} == '' ]]; then
        rm -rf oaiharvest
        mkdir oaiharvest

        oai_data=$(curl -s --retry 9 --retry-delay 300 "${oai_server}&metadataPrefix=marc21_withholdings${from}")
        echo -e "${oai_data}" > "oaiharvest/${counter}.xml"


        counter=$((${counter} + 1))

        resumption_token=$((grep -o '<resumptionToken.*</resumptionToken>' |grep -oi '>[a-z0-9]*<' |tr -d '<>') <<<  "${oai_data}")
fi


while [[ ${resumption_token} != '' ]]; do
	oai_data=$(curl -s --retry 9 --retry-delay 60 "${oai_server}&resumptionToken=${resumption_token}")
	resumption_token=$((grep -o '<resumptionToken.*</resumptionToken>' |grep -oi '>[a-z0-9]*<' |tr -d '<>') <<<  "${oai_data}")

	echo -e "${oai_data}" > oaiharvest/${counter}.xml
	counter=$((${counter} + 1))

	echo -en "$(( $counter )) tokens processed in $SECONDS seconds\r"
done

echo "$(( $counter )) tokens processed in $SECONDS seconds"


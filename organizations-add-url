auth 2>/dev/null || authn 2>/dev/null
tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

declare -A organization_dict

filename="org_url.tsv"
dos2unix ${filename}

get_orgs() {

recsretrieved=100
offset=0
all_organizations=""

# retrieve all records
while [[ $recsretrieved -eq 100 ]] ;do
        apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/organizations-storage/organizations?query=%28status%3D%3D%22Active%22%29+sortby+name%2Fsort.ascending&limit=100&offset=$offset" |jq .organizations)

        recsretrieved=$(echo ${apicall} |jq '. |length')
        totalrecs=$(($offset + $recsretrieved))
        printf "%s Organizations retrieved\r" $totalrecs

        all_organizations="${all_organizations}$(echo ${apicall} |jq .[])"
        offset=$(($offset + 100))
        done

echo "$totalrecs Organizations retrieved"

# load organizations into scalar array keyed by downcased name
eval "$(echo ${all_organizations} |jq -r '. | @sh "organization_dict[\(.code|tostring|ascii_downcase)]=\(.|tostring)"')"

echo "Normalizing Organization keys"

# normalize keys
for key in "${!organization_dict[@]}";do
	newkey=${key//[^a-z0-9]/}
        organization_dict[${newkey}]=${organization_dict["${key}"]}
done
}

#####################################

get_orgs

counter=0

while IFS=$'\n' read line;do
	line=$(echo "${line}" | tr -d '"' | tr "\t" "^")
	IFS='^' read -r code url <<< ${line}
	code=$(tr -dc [0-9a-z] <<< ${code,,})
	organization="${organization_dict[$code]}"
	uuid=$(echo ${organization} |jq -r .id)

	url="{ \"language\" : \"en\", \"isPrimary\" : false, \"value\" : \"${url}\", \"categories\" : [] }"

	updated_org=$(echo ${organization} | jq ".urls += [ ${url} ]")

	apicall=$(curl --http1.1 -s -w '\n' -X PUT -H "Content-type: application/json" -H "Accept: text/plain" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${updated_org}" ${okapi_url}/organizations-storage/organizations/${uuid})

	counter=$((counter + 1))
	echo "Processing $code -- record $counter"
	echo "${apicall}"
done < ${filename}


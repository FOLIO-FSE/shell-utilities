tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

while IFS=$'\t' read pol hrid; do
	# get uuid for pol based on pol number
	apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/orders/order-lines?query=poLineNumber=${pol}")
	po_uuid=$(echo $apicall | jq -r '.poLines[].id')
	
	# get uuid for instance based on hrid
	apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/inventory/instances?query=(hrid==${hrid})")
	instance_uuid=$(echo $apicall | jq -r '.instances[].id')
	title=$(echo $apicall | jq -r '.instances[].title ')

	#retrieve pol
	apicall=$(curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/orders/order-lines/${po_uuid}")

	updated_pol=$(echo $apicall | jq --arg INSTANCEID "${instance_uuid}" --arg TITLE "${title}" '(.instanceId = $INSTANCEID) | (.titleOrPackage = $TITLE)')

        apicall=$(curl --http1.1 -s -w '\n' -X PUT \
          -H "Content-type: application/json" \
          -H "Accept: text/plain" \
          -H "X-Okapi-Tenant: ${tenant}" \
          -H "x-okapi-token: ${okapi_token}" \
          -d "${updated_pol}" \
          ${okapi_url}/orders/order-lines/${po_uuid})
echo "$pol $po_uuid   $title"

done < poline-hrid

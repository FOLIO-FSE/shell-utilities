# Supply without a uuid to delete all of many record types
# 
tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

deletetype=$1
deletefile="delete"
numrecs=$(wc -l ${deletefile} |cut -d " " -f1)

delete_record() {
	local uuid=${1//[^0-9a-z\-]/}
	local apicall=$(curl -s -w '\n' -X DELETE -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/${recordtype}/${uuid}")
}

case $deletetype in
"campuses")
	recordtype="location-units/campuses"
	;;
"groups")
	recordtype="groups"
	;;
"holdings")
	recordtype="holdings-storage/holdings"
	;;
"instances")
	recordtype="instance-storage/instances"
	;;
"instance-types")
	recordtype="instance-types"
	;;
"interfaces")
	recordtype="organizations-storage/interfaces"
	;;
"invoices")
	recordtype="invoice/invoices"
	;;
"invoice-lines")
	recordtype="invoice/invoice-lines"
	;;
"items")
	recordtype="item-storage/items"
	;;
"libraries")
	recordtype="location-units/libraries"
	;;
"locations")
	recordtype="locations"
	;;
"notices")
	recordtype="scheduled-notice-storage/scheduled-notices"
	;;
"organizations")
	recordtype="organizations/organizations"
	;;
"requests")
	recordtype="circulation/requests"
	;;
"servicepoints")
	recordtype="service-points"
	;;
"srs")
	recordtype="source-storage/records"
	;;
"tags")
	recordtype="tags"
	;;
"users")
	recordtype="users"
	;;
*)
	echo "Record type '${deletetype}' not found. Supported types are campuses, groups, holdings, instances, instance-types, items, libraries, locations, notices, organizations, requests, servicepoints, srs, tags, users. Objects with attached records will need specialized delete routines"
	exit
	;;
esac

counter=1

while mapfile -t -n 10 uuids && ((${#uuids[@]})); do
	for uuid in ${uuids[@]};do
		delete_record ${uuid} &
		counter=$(($counter + 1))
		printf "Processing %s -- record %s of %s\r" $uuid $counter $numrecs
	done
	wait
done < ${deletefile}


tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)

rec_type=$1
search_for=$2

num_retrieved=1000
limit=0

function fetch_batch() {
	local offset=$1
	curl -s -w '\n' -X GET -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/${endpoint}?limit=${num_retrieved}&offset=${offset}&${query}${sortby}" |jq -c ".${rec_type}[]"  > "tmp_${rec_type}.${t}"
}

case $rec_type in
"accounts")
	endpoint="accounts";;
"authorities")
	endpoint="authority-storage/authorities";;
"boundwiths")
	endpoint="inventory-storage/bound-with-parts"
	rec_type="boundWithParts";;
"circlog")
	endpoint="audit-data/circulation/logs"
	rec_type="logRecords" ;;
"courses")
	endpoint="coursereserves/courses";;
"feefines")
	endpoint="feefines";;
"feefineactions")
	endpoint="feefineactions";;
"holdings")
	rec_type="holdingsRecords"
	endpoint="holdings-storage/holdings";;
"interfaces")
	endpoint="organizations-storage/interfaces";;
"instances")
	endpoint="instance-storage/instances";;
"items")
	endpoint="item-storage/items";;
"locations")
	endpoint="locations";;
"loans")
	endpoint="circulation/loans";;
"notes")
	endpoint="notes";;
"organizations")
	endpoint="organizations-storage/organizations"
	query="query=%28status%3D%3D%22Active%22%29+sortby+name%2Fsort.ascending"
	num_retrieved=100
	;;
"polines")
	rec_type="poLines"
	endpoint="orders-storage/po-lines";;
"requests")
	endpoint="circulation/requests";;
"schedulednotices")
	endpoint="scheduled-notice-storage/scheduled-notices";;
"srs")
	rec_type="records"
	limit=1
	endpoint="source-storage/records";;
"users")
	endpoint="users";;
*)
	echo "Record type not found.";exit;;
esac

rm -f ${rec_type}

num_records=$(curl -s -w '\n' -X GET -D -H "Accept: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" "${okapi_url}/${endpoint}?${query}&limit=${limit}" |jq -r .totalRecords)

for (( offset=0; offset<=$num_records; ));do
	for ((t=0; t<=4; t=$(($t + 1)) )); do
		if [[ $offset -le $num_records ]];then 
			fetch_batch $offset &
			offset=$(($offset + $num_retrieved))
		fi
	done
	wait
		
	cat tmp_${rec_type}.* >> ${rec_type}
	rm tmp_${rec_type}.*

	if [[ $offset -ne 0 ]];then printf "%s records retrieved of %s\r" $offset $num_records;fi
done

echo "$num_records records have been exported to \"${rec_type}\""




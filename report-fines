auth 2>/dev/null || authn 2>/dev/null
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)
tenant=$(cat tenant)

echo "Retrieving all fine records"

records-get accounts

finethreshold=10

#### generate list of users and fine over threshold

cat accounts.json \
	|jq -r 'select(.status.name=="Open" and .remaining>0 )|[.userId, .remaining]|@tsv' \
	|awk -v THRESHOLD=$finethreshold 'BEGIN{OFS="\t"}{ remaining[$1]+=$2 } 
		END { for (user in remaining) {
			if (remaining[user] > THRESHOLD) {
				print(user, remaining[user]) 
			}
		}}' \
	| sort > users_fines.tmp


#### convert user uuids to barcodes and list the fine
rm -f users_fines.tsv

echo

cut -f1 users_fines.tmp > uuids

echo "Retrieving user barcodes for fines"
records-getfromfile users

jq -sr '.|sort_by(.id)|.[] |.barcode' users.json > tmp_users
paste tmp_users users_fines.tmp |cut -f1,3 |sort -k2nr > users_fines.tsv

echo "Output has been sent to users_fines.tsv"

rm users_fines.tmp accounts.json users.json uuids tmp_users

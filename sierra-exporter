# sierra.url contains api endpoint e.g. https://library2.mtsu.edu/sierra-api/v5
# sierra.auth contains apikey followed by colon 
#
# usage: ./sierra-exporter [rectype] e.g. ./sierra-exporter bibs

function auth () {
	auth=$(curl -s -w '\n' -X POST \
	  -H "Content-type: application/json" \
	  -H "Authorization: Basic ${sierra_auth}" \
	  "${baseUri}/token")
	
	access_token=$(echo ${auth} | jq -r '.access_token')
}

function get_data() {
	api=$(curl -s -w '\n' -X GET \
	  -H "Content-type: application/json" \
	  -H "Authorization: Bearer ${access_token}" \
	  "${apiUri}?offset=${offset}&fields=${defaultFields}&limit=${increment}${deletedrecs}")
}

baseUri=$(cat sierra.url)
sierra_auth=$(cat sierra.auth | base64)
offset=0
increment=2000
counter=1
lastrec=$increment

rectype=$1
mkdir $rectype 2>/dev/null || true

### eliminates deleted records for some types
deletedrecs=''

case $rectype in
	patrons|items|bibs)
		deletedrecs="&deleted=false"
		;;
esac

apiPath=$(cat sierra.json |jq -r  ".streams[] | select(.streamName==\"${rectype}\") | .apiPath")
apiUri=${baseUri}${apiPath}

defaultFields=$(cat sierra.json |jq -r ".streams[] | select(.streamName==\"${rectype}\") | .defaultFields")

auth

SECONDS=0
timer=$SECONDS

while [ $lastrec -le $increment ]
do
	get_data
	printf -v filecounter "%04d" $counter
	echo "$api" | jq '.' > "${rectype}/${rectype}.${filecounter}.json"
	offset=$(($offset + $increment))
	if [[ $counter -gt 0 ]]; then echo "$(( $increment*$counter )) records processed in $SECONDS seconds";fi
	counter=$(($counter + 1))
	
	lastrec=$(echo "$api" |jq 'select(.total != null) | .total')

	if [[ $lastrec = '' ]]; then increment=0;fi 
	if [[ $lastrec -lt $increment ]]; then increment=0;fi 

	if [[ $timer -gt 2700 ]]; then 
		# generate new token
		auth
		timer=0
	fi
done

echo "Completed processing in $SECONDS seconds"




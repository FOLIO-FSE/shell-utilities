# sierra.url contains api endpoint e.g. https://library2.mtsu.edu/sierra-api/v5
# sierra.auth contains apikey followed by colon 
#
# usage: ./sierra-exporter [rectype] e.g. ./sierra-exporter bibs

function auth () {
	auth=$(curl -s -k -w '\n' -X POST \
	  -H "Content-type: application/json" \
	  -H "Authorization: Basic ${sierra_auth}" \
	  "${baseUri}/token")
	
	access_token=$(echo ${auth} | jq -r '.access_token')
}

function get_data() {
	api=$(curl -s -k -w '\n' -X GET \
	  -H "Content-type: application/json" \
	  -H "Authorization: Bearer ${access_token}" \
	  "${apiUri}?offset=${offset}&fields=${defaultFields}&limit=${increment}${deletedrecs}")
}

function patrons2tsv() {

cat patrons/patrons.0*.json |jq -r '.entries[] | [
        .id // "",
        .barcodes[0] // "",
	(.varFields[] |select(.fieldTag=="l") | .content // ""), # network id
	(.varFields[] |select(.fieldTag=="u") | .content // ""), # univ id
        .createdDate // "",
        .fixedFields."43".value // "",  # expiration date
        .emails[0] // "nomail@nomail.com",
        .addresses[0].lines[0] // "",
        .addresses[0].lines[1] // "",
        .names[0] // "",
        .phones[0].number // "",
        .fixedFields."47".value // "", # patron group
        .fixedFields."56".value // "", # block
        .fixedFields."96".value // "" # money owed
] |join("|")' > patrons.tmp

echo -e "sierra_id\tbarcode\texternalid\tuni_id\tcreated\texpiration\temail\tfname\tlname\taddr1\taddr2\tcity\tstate\tzip\tphone\tgroup\tblock\towed" > patrons.tsv

while IFS=$'\n' read -r line; do
	IFS='|' read sierra_id barcode externalid uni_id created expiration email name addr1 addr2 phone group block owed <<< $line 
	
	city=""
	zip=""
	state=""
	fname=""
	lname=""

	## break address line into components. Assume that city/state/zip is in addr2
	## Hope for the city followed by a comma followed by state and zip
	## If comma not found or if it doesn't look like something that ends in a zip
	## then leave everything as it is

	IFS=',' read city statezip <<< ${addr2}

	IFS=' ' read -r -a stziparr <<< ${statezip}
	
	if [[ ${#stziparr[@]} > 1 ]]; then
		if [[ ${stziparr[-1]} =~ ^[0-9\-]*$ ]]; then
			zip=${stziparr[-1]} 
			state=${stziparr[-2]}
		fi
	fi

	## generate network name
	if [[ $email =~ 'mtsu.edu' ]]; then 
		externalid=$(sed 's/@.*//' <<< ${email})
	else
		externalid=${sierra_id}
	fi

	## detect name
	fname=" "
	lname=" "

	if [[ name != "" ]]; then
		fname=$(echo $name | cut -f2 -d,)
		lname=$(echo $name | cut -f1 -d,)
	fi

echo -e "sierra_id\tbarcode\texternalid\tuni_id\tcreated\texpiration\temail\tfname\tlname\taddr1\taddr2\tcity\tstate\tzip\tphone\tgroup\tblock\towed" > patrons.tsv
	echo -e "${sierra_id}\t${barcode}\t${externalid}\t${uni_id}\t${created}\t${expiration}\t${email}\t${fname}\t${lname}\t${addr1}\t${addr2}\t${city}\t${state}\t${zip}\t${phone}\t${group}\t${block}\t${owed}" | tee -a patrons.tsv
done < patrons.tmp

rm patrons.tmp


echo -e "\n\nAll patrons have been exported. JSON files are in the patrons directory, and a delimited file patrons.tsv is in your current working directory\n"
}

baseUri=$(cat sierra.url)
sierra_auth=$(cat sierra.auth | base64)
offset=0
increment=2000
counter=1
lastrec=$increment

rectype=$1

case $rectype in
	patrons)
		echo "Building TSV patron file"	
		patrons2tsv
		;;
esac


### input is file of all sierra items with one item per line

outfile="items.tsv"

echo "Starting processing. Please be patient -- this can take many minutes"

rm ${outfile} 2>/dev/null

declare -A imsg_dict
declare -A opacmsg_dict
declare -A pieces_dict

imsg_dict=(['1']="CHECK FOR DISC" ['m']="CHECK FOR MAP" ['p']="CHECK FOR PTS." ['a']="CHECK FOR VIEWER" ['9']="CHK BATTERIES!" ['2']="CHK FOR 2 DISC" ['3']="CHK FOR 3 DISC" ['4']="CHK FOR 4 DISC" ['w']="HAS 2 ITEMS" ['v']="HAS 2 TAPES" ['x']="HAS 3 TAPES" ['y']="HAD 4 TAPES" ['z']="HAS 3 ITEMS" ['h']="HAS 4 ITEMS" ['i']="HAS 5 ITEMS" ['-']="")

pieces_dict=(['1']="2" ['m']="2" ['p']="2" ['a']="2" ['9']="2" ['2']="3" ['3']="4" ['4']="5" ['w']="3" ['v']="3" ['x']="4" ['y']="5" ['z']="4" ['h']="5" ['i']="6")


cat all_items.json | tr -d "|" | jq -r '. | [
        .id // "",
        .bibIds[0] // "",
        .barcode // "",
	.location.code // "",
	.status.code // "",
        .callNumber // " ",
        .itemType // "",
	.fixedFields."58".value // "", # copy
	(.varFields[] |select(.fieldTag=="v") | .content) // "", # volume
	.fixedFields."59".value // "", # icode1
	.fixedFields."60".value // "", # icode2
	.fixedFields."61".display // "", # icode2
	.fixedFields."97".value // "", # imessage
	(.varFields[] |select(.fieldTag=="x") | .content) // "", # item note 
	(.varFields[] |select(.fieldTag=="m") | .content) // "" # opac message
	] |join("|")' |tr -d '"' |tr -d "'" > items.tmp


echo -e "holdingsId\tbibId\titem_id\tbarcode\titem_location\tstatus\tcallNum\titype\tloantype\tcopy\tvolume\ticode1\ticode2\tmattype\timessage\tpieces\tnote\topacmsg\timsgtype\tmsgsuppress" > ${outfile}

echo "Items extracted from JSON. Analyzing file"

SECONDS=0
counter=0

while IFS=$'\n' read -r line; do
	#### remove "-" values which indicate defaults
	line=$(sed 's/|-/|/g' <<< ${line})

	inotetype=''
	notesuppress=''
	loantype="${itype}"

	timer=$SECONDS
	IFS='|' read id bibId barcode location status callNum itype copy volume icode1 icode2 mattype imessage note opacmsg <<< $line 

	counter=$((${counter} + 1))
	if [[ $((${counter}%100)) == 0 ]];then echo -en "${counter} records processed in ${timer} seconds\r"; fi

	if [[ ${imessage} != "" ]];then pieces=$(sed 's/[^0-9]//g' <<< $imessage);fi	
	if [[ ${pieces} != "" ]];then pieces=${imsg_dict[${pieces}]};pieces=${pieces_dict[${pieces}]};fi	
	
	### concatenate note types and put 2 in the pieces column to trigger the checkout message
	if [[ ${opacmsg} != "" ]];then imessage="${opacmsg} ${imessage}";opacmsg=2;fi

	if [[ ${note} != "" ]];then imsgtype='8d0a5eca-25de-4391-81a9-236eeefdd20b';fi
	if [[ ${note} != "" ]];then msgsuppress='true';fi

	echo -e "${bibId}${location}\t${bibId}\t${id}\t${barcode}\t${location}\t${status}\t${callNum}\t${itype}\t${location}\t${copy}\t${volume}\t${icode1}\t${icode2}\t${mattype}\t${imessage}\t${pieces}\t${note}\t${opacmsg}\t${inotetype}\t${notesuppress}" >> ${outfile}

done < items.tmp

echo "${counter} records processed in ${timer} seconds"

rm items.tmp



### input is file of all sierra items with one item per line

outfile="items.tsv"
## uuid for item notes
notetype='8d0a5eca-25de-4391-81a9-236eeefdd20b'

echo "Starting processing. Please be patient -- this can take many minutes"

rm ${outfile} 2>/dev/null

declare -A imsg_dict

imsg_dict=(['a']="2 pieces"  ['b']="3 pieces"  ['c']="circ review"  ['d']="4 pieces"  ['e']="5 pieces"  ['f']="Reserve Item"  ['g']="Refer to Zinia Randles"  ['h']="Reserve Item Do Not Renew"  ['i']="Inventory Review"  ['j']="6 pieces"  ['k']="give to kim in curr"  ['l']="reorder latest edition" ['m']="must pay replacement" ['n']="give to karen martin" ['o']="order replacement"  ['p']="popular reading"  ['q']="liaison review"  ['r']="reference book"  ['s']="No renewal - give to suzy"  ['t']="cataloging review" ['u']="file won't open" ['w']="curriculum withdrawl"  ['y']="more than one bib"  ['x']="Delete no replacement"  ['z']="withdrawn" ['-']="")

cat all_items.json | tr -d "|" | jq -r '. | [
        "\(.id)" // "",
        "\(.bibIds[0])" // "",
        "\(.barcode)" // "",
	"\(.location.code)" // "",
        "\(.callNumber)" // "",
        "\(.itemType)" // "",
	"\(.fixedFields."58".value)" // "", # copy
	(.varFields[] |select(.fieldTag=="v") | "\(.content)") // "", # volume
	"\(.fixedFields."59".value)" // "", # icode1
	"\(.fixedFields."60".value)" // "", # icode2
	"\(.fixedFields."61".display)" // "", # mattype 
	"\(.fixedFields."97".display)" // "", # imessage
	([ .varFields[] |select(.fieldTag=="x") | "\(.content)" ] |join("; ")) // "", # item note 
	([ .varFields[] |select(.fieldTag=="m") | "\(.content)" ] |join("; ")) // "" # opac message
	] |join("|")' |tr -d '"' |tr -d "'" > items.tmp


echo -e "itemId\tbibId\tholdingsId\tbarcode\tlocation\tcallNum\titype\tcopy\tvolume\ticode1\ticode2\tmattype\timessage\tpieces\tnote\topacmsg\timsgtype\tmsgsuppress" > ${outfile}

echo "Items extracted from JSON. Analyzing file"

SECONDS=0
counter=0

while IFS=$'\n' read -r line; do
	#### remove "-" values which indicate defaults
	line=$(sed 's/|-/|/g' <<< ${line})

	inotetype=''
	notesuppress=''

	timer=$SECONDS
	IFS='|' read id bibId barcode location callNum itype copy volume icode1 icode2 mattype imessage note opacmsg <<< $line 

	counter=$((${counter} + 1))
	if [[ $((${counter}%10)) == 0 ]];then echo -en "${counter} records processed in ${timer} seconds\r"; fi

	if [[ ${imessage} != "" ]];then pieces=$(sed 's/[^0-9]//g' <<< $imessage);fi	
	if [[ ${pieces} != "" ]];then pieces=${imsg_dict[${pieces}]};pieces=${pieces_dict[${pieces}]};fi	
	
	if [[ ${icode2} =~ [vn] ]];then icode2="true"; else icode2="false";fi

	###

	if [[ ${note} != "" ]];then imsgtype="${notetype}";fi
	if [[ ${note} != "" ]];then notesuppress='true';fi

	echo -e "${id}\t${bibId}\t${bibId}${location}\t${barcode}\t${location}\t${callNum}\t${itype}\t${copy}\t${volume}\t${icode1}\t${icode2}\t${mattype}\t${imessage}\t${pieces}\t${note}\t${opacmsg}\t${inotetype}\t${notesuppress}" >> ${outfile}

done < items.tmp

echo "${counter} records processed in ${timer} seconds"

rm items.tmp



tenant=$(cat tenant)
okapi_url=$(cat okapi.url)
okapi_token=$(cat okapi.token)



build_address() {
IFS='$' read -a addr_arr <<< ${addr}

lenarr=${#addr_arr[@]}

line1=""
line2=""
city=""
state=""
zip=""
citystatezip=""

if [[ "$lenarr" -eq "2" ]]; then 
	citystatezip="${addr_arr[1]}"	
	line2="${addr_arr[0]}"	
fi
if [[ "$lenarr" -eq "3" ]]; then 
	citystatezip="${addr_arr[2]}"	
	line2="${addr_arr[1]}"	
	line1="${addr_arr[0]}"	
fi

if [[ "$lenarr" -eq "4" ]]; then 
	citystatezip="${addr_arr[3]}"	
	line2="${addr_arr[2]}"	
	line1="${addr_arr[0]}, ${addr_arr[1]}"	
fi


IFS=',' read city statezip <<< ${citystatezip}

IFS=' ' read -r -a statezip <<< "${citystatezip}"


if [[ ${#statezip[@]} > 1 ]]; then
	if [[ ${statezip[-1]} =~ ^[0-9\-]*$ ]]; then

		zip=${statezip[-1]} 
		state=${statezip[-2]}
		citystatezip=""
	fi
fi

if [[ ${zip} == "" ]]; then
	IFS=' ' read -r -a city state zip <<< "${citystatezip}"

	if ! [[ ${zip} =~ ^[0-9A-Z\-]*$ ]]; then
		city=""
		state=""
		zip=""
	fi
fi

address="{\"isPrimary\":true,\"addressLine1\":\"${line1}\",\"addressLine2\":\"${line2}\",\"city\":\"${city}\",\"stateRegion\":\"${state}\",\"zipCode\":\"${zip}\"}"
}

create_org_record() {


if [[ ${email1} =~ @ ]]; then email="{ \"value\" : \"${email1}\", \"isPrimary\" : true, \"categories\" : [] }";fi
if [[ ${email2} =~ @ ]]; then email="${email}, { \"value\" : \"${email2}\", \"isPrimary\" : false, \"categories\" : [] }";fi
if [[ ${email3} =~ @ ]]; then email="${email}, { \"value\" : \"${email3}\", \"isPrimary\" : false, \"categories\" : [] }";fi
if [[ ${email4} =~ @ ]]; then email="${email}, { \"value\" : \"${email4}\", \"isPrimary\" : false, \"categories\" : [] }";fi


IFS='' read -r -d '' org << EndOfOrg
{
 "id" : "${uuid}",
 "name" : "${name}",
 "code" : "${code}",
 "description" : "",
 "exportToAccounting" : false,
 "status" : "Active",
 "aliases" : [ ],
 "addresses" : [${address}],
 "phoneNumbers" : [${phone} ${fax}],
 "emails" : [${email}],
 "urls" : [${url} ],
 "contacts" : [ ],
 "agreements" : [ ],
 "erpCode" : "",
 "vendorCurrencies" : [ ],
 "edi" : {
   "vendorEdiType" : "31B/US-SAN",
   "libEdiType" : "31B/US-SAN",
   "ediFtp" : {
     "ftpFormat" : "SFTP",
     "ftpMode" : "ASCII",
     "ftpConnMode" : "Active"
   }
 },
 "interfaces" : [ ],
 "accounts" : [${accountnum}],
 "isVendor" : true,
 "changelogs" : [ ],
 "acqUnitIds" : [ ]
} 
EndOfOrg

echo "${org}"

}


add_phone() {
	org=$(echo ${org} | jq ".phoneNumbers += [{ \"phoneNumber\" : \"${phone}\", \"isPrimary\" : false, \"categories\" : [] }]")
}

add_contact() {
	newcontact="$1"	
	contactname=""
	contactnote=""
	name=""
	fname=""
	lname=""

	delim=" - "

	if [[ ${newcontact} =~ $delim ]];then
		contactname=$(sed 's/ - .*$//' <<< ${newcontact})
		contactnote=$(sed 's/[^\-]* //' <<< ${newcontact})
	else
		contactname="${newcontact}"
	fi

	contactname=$(sed 's/(.*)$//' <<< ${contactname})

	IFS=" " read -a name_arr <<< "${contactname}"
	lname="${name_arr[-1]}"
	fname="${name_arr[0]}"

	contactId=$(uuidgen)
	contact="{\"firstName\":\"${fname}\",\"lastName\":\"${lname}\",\"notes\":\"${contactNote}\",\"id\":\"${contactId}\"}"

	apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${contact}" "${okapi_url}/organizations-storage/contacts")

	apicall=$(curl -s -w '\n' -X GET -D \
	  -H "Accept: application/json" \
	  -H "X-Okapi-Tenant: ${tenant}" \
	  -H "x-okapi-token: ${okapi_token}" \
	  ${okapi_url}/organizations-storage/organizations/${uuid})
	
	updated_org=$(echo ${apicall} | jq ".contacts += [\"${contactId}\"]")

	apicall=$(curl --http1.1 -s -w '\n' -X PUT \
	  -H "Content-type: application/json" \
	  -H "Accept: text/plain" \
	  -H "X-Okapi-Tenant: ${tenant}" \
	  -H "x-okapi-token: ${okapi_token}" \
	  -d "${updated_org}" \
	  ${okapi_url}/organizations-storage/organizations/${uuid})
echo "${updated_org}" >> orgs
}

add_note() {

IFS='' read -r -d '' note << EndOfNote
{
  "domain": "organizations",
  "typeId": "874a6555-01af-4fc7-b6ea-c1627a7187cf",
  "content": "<div>${note}</div>",
  "title": "${code} note",
  "links": [
    {
      "type": "organization",
      "id": "${uuid}"
    }
  ],
  "id": "$(uuidgen)"
}
EndOfNote

apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${note}" "${okapi_url}/notes")

}


while IFS='^' read -r code name role addr phone1 phone2 fax email1 email2 email3 email4  note1 note2 note3 note4 url contact1 contact2 contact3;do
	# org uuid -- needs to be global
	uuid=$(uuidgen)

	note="${note1} ${note2} ${note3} ${note4}"

	if [[ ${accountnum} != "" ]]; then
		accountnum="{\"name\":\"${name}\",\"accountNo\":\"${fieldL}\",\"paymentMethod\":\"Other\",\"accountStatus\":\"Active\",\"libraryCode\":\"-\",\"libraryEdiCode\":\"-\"}"
	else
		accountnum=""
	fi

	if [[ ${phone1} != "" ]]; then phone="{ \"phoneNumber\" : \"${phone1}\", \"isPrimary\" : true, \"categories\" : [] }";fi

	if [[ ${phone2} != "" ]]; then
		if [[ ${phone} != "" ]]; then phone="${phone} ,{ \"phoneNumber\" : \"${phone2}\", \"isPrimary\" : false, \"categories\" : [] }";fi

	fi

	if [[ ${fax} != "" ]]; then
		if [[ ${phone} != "" ]]; then
			fax=",{\"phoneNumber\":\"${fax}\",\"type\":\"Fax\"}"
		else
			fax="{\"phoneNumber\":\"${fax}\",\"type\":\"Fax\"}"
		fi

	else
		fax=""
	fi

	url=$(sed 's/ .*//' <<< ${url})
	url=$(sed 's/^[^h].*//' <<< ${url})

	if [[ ${url} =~ ^http ]]; then
		url="{ \"language\" : \"en\", \"isPrimary\" : true, \"value\" : \"${url}\" }"
	fi
	address=""
	if [[ "${#addr}" -gt "5" ]]; then 
		build_address
	fi
	echo "Processing $code"
	org=$(create_org_record)
	
	apicall=$(curl --http1.1 -s -w '\n' -X POST -H "Content-type: application/json" -H "X-Okapi-Tenant: ${tenant}" -H "x-okapi-token: ${okapi_token}" -d "${org}" "${okapi_url}/organizations/organizations")

echo "${org}" > org.log

	if [[ ${note} =~ [a-z0-9A-Z] ]];then
		note=$(sed 's/  */ /g' <<< ${note})
		add_note
	fi

	if [[ ${contact1} =~ [a-z0-9A-Z] ]];then
		add_contact "${contact1}"
	fi
	if [[ ${contact2} =~ [a-z0-9A-Z] ]];then
		add_contact "${contact2}"
	fi
	if [[ ${contact3} =~ [a-z0-9A-Z] ]];then
		add_contact "${contact3}"
	fi

	echo "Processing $code -- record $counter"
	counter=$((counter + 1))
done < unimelb_vendors.txt


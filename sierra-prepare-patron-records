#################################################################################
# Presumes patrons have been been bulk downloaded via API and put in a directory

cat patrons/patrons.0*.json |jq -cr '.entries[] | [
        .id // "",
        .barcodes[0] // "",
	(.varFields[] |select(.fieldTag=="z") | .content) // "", # network
	(.varFields[] |select(.fieldTag=="b") | .content) // "", # univ id
        .createdDate // "",
        .fixedFields."43".value // "",  # expiration date
        .emails[0] // "noreply@utm.edu",
        .names[0] // "",
        .addresses[0].lines[0] // "",
        .addresses[0].lines[1] // "",
        .phones[0].number // "",
        .addresses[1].lines[0] // "",
        .addresses[1].lines[1] // "",
        .phones[1].number // "",
        .fixedFields."47".value // "", # patron group
        .fixedFields."56".value // "", # block
        .fixedFields."96".value // "0" # money owed
] |join("|")' | tr -d "'" |tr -d '"' > patrons.tmp

echo -e "sierra_id\tbarcode\texternalid\tuni_id\tcreated\texpiration\temail\tfname\tlname\ttaddr1\ttaddr2\ttcity\ttstate\ttzip\ttphone\tpaddr1\tpaddr2\tpcity\tpstate\tpzip\tpphone\tgroup\tblock\towed" > patrons.tsv

counter=1
SECONDS=0

while IFS=$'\n' read -r line; do
	## make sure line has right number of fields
	timer=$SECONDS
	IFS='|' read sierra_id barcode externalid uni_id created expiration email name taddr1 taddr2 tphone paddr1 paddr2 pphone group block owed <<< $line 
	
	tcity=""
	tzip=""
	tstate=""
	pcity=""
	pzip=""
	pstate=""
	fname=""
	lname=""

	## break address line into components. Assume that city/state/zip is in addr2
	## Hope for the city followed by a comma followed by state and zip
	## If comma not found or if it doesn't look like something that ends in a zip
	## then leave everything as it is

	IFS=',' read tcity tstatezip <<< ${taddr2}

	IFS=' ' read -r -a tstziparr <<< ${tstatezip}
	
	if [[ ${#tstziparr[@]} > 1 ]]; then
		if [[ ${tstziparr[-1]} =~ ^[0-9\-]*$ ]]; then
			tzip=${tstziparr[-1]} 
			tstate=${tstziparr[-2]}
			taddr2=''
		fi
	fi

	IFS=',' read pcity pstatezip <<< ${paddr2}

	IFS=' ' read -r -a pstziparr <<< ${pstatezip}
	
	if [[ ${#stziparr[@]} > 1 ]]; then
		if [[ ${pstziparr[-1]} =~ ^[0-9\-]*$ ]]; then
			pzip=${pstziparr[-1]} 
			pstate=${pstziparr[-2]}
			paddr2=''
		fi
	fi
	## generate consistent ids 
	if [[ ${uni_id} == ""  ]]; then uni_id="${sierra_id}";fi

	## detect name
	fname=" "
	lname=" "

	if [[ name != "" ]]; then
		fname=$(echo $name | cut -f2 -d,)
		lname=$(echo $name | cut -f1 -d,)
	fi

	counter=$(($counter + 1))

	if [[ $(($counter % 100)) == 0 ]];then echo "${counter} records processed in ${timer} seconds";fi

	echo -e "${sierra_id}\t${barcode}\t${externalid}\t${uni_id}\t${created}\t${expiration}\t${email}\t${fname}\t${lname}\t${addr1}\t${addr2}\t${city}\t${state}\t${zip}\t${phone}\t${group}\t${block}\t${owed}"  >> patrons.tsv
done < patrons.tmp

rm patrons.tmp


echo -e "\n\nAll patrons have been exported. JSON files are in the patrons directory, and a delimited file patrons.tsv is in your current working directory\n"

